import { db, auth } from './firebase-config.js';
import {
  collection, query, getDocs,
  getDoc, doc, updateDoc
} from "https://www.gstatic.com/firebasejs/11.8.1/firebase-firestore.js";
import {
  onAuthStateChanged,
  signOut
} from "https://www.gstatic.com/firebasejs/11.8.1/firebase-auth.js";

const tableBody = document.querySelector("#table-reservations tbody");

// Contr√¥le d'acc√®s s√©curis√©
onAuthStateChanged(auth, async (user) => {
  if (!user) {
    window.location.href = "login.html";
    return;
  }

  let isAdmin = false;

  try {
    const snap = await getDoc(doc(db, "users", user.uid));
    isAdmin = snap.exists() && snap.data().role === "admin";
  } catch (err) {
    console.error("Erreur r√©cup√©ration r√¥le :", err);
  }

  if (!isAdmin) {
    await signOut(auth);
    alert("üö´ Acc√®s r√©serv√© aux administrateurs.");
    window.location.href = "login.html";
    return;
  }
  /* ‚úÖ 3bis. Affiche le tableau uniquement si admin */
  document.getElementById("admin-panel").style.display = "block";

  // ‚úÖ L‚Äôutilisateur est admin : on charge les donn√©es
  chargerReservations();
});

// Chargement des r√©servations
async function chargerReservations() {
  try {
    const snap = await getDocs(query(collection(db, "reservations")));

    let total = 0, paid = 0, canceled = 0, acompte = 0;
    let packStandard = 0, packConfort = 0, packVIP = 0;

    snap.forEach(d => {
      const r = d.data();
      total++;

      if (r.statut === "pay√©")     paid++;
      else if (r.statut === "annul√©") canceled++;
      else                          acompte++;

      if (r.pack === "Standard")   packStandard++;
      else if (r.pack === "Confort") packConfort++;
      else if (r.pack === "VIP")     packVIP++;

      const row = document.createElement("tr");
      row.innerHTML = `
        <td>${r.clientNom}</td>
        <td>${r.clientEmail}</td>
        <td>${r.dateDepart?.toDate().toLocaleDateString("fr-FR") ?? ""}</td>
        <td>${r.dateRetour?.toDate().toLocaleDateString("fr-FR") ?? ""}</td>
        <td>${r.pack}</td>
        <td class="statut">${r.statut}</td>
        <td>
          <button class="btn-statut" data-id="${d.id}" data-val="pay√©">‚úÖ Pay√©</button>
          <button class="btn-statut" data-id="${d.id}" data-val="annul√©">‚ùå Annuler</button>
        </td>
      `;
      row.dataset.nom    = r.clientNom.toLowerCase();
      row.dataset.email  = r.clientEmail.toLowerCase();
      row.dataset.statut = r.statut.toLowerCase();
      row.dataset.pack   = r.pack.toLowerCase();
      tableBody.appendChild(row);
    });

    // Statistiques
    document.getElementById("total-count").textContent   = total;
    document.getElementById("paid-count").textContent    = paid;
    document.getElementById("cancel-count").textContent  = canceled;
    document.getElementById("acompte-count").textContent = acompte;
    document.getElementById("pack-standard").textContent = packStandard;
    document.getElementById("pack-confort").textContent  = packConfort;
    document.getElementById("pack-vip").textContent      = packVIP;

  } catch (err) {
    console.error("Erreur chargement r√©servations :", err);
  }
}

// Mise √† jour du statut
tableBody.addEventListener("click", async (e) => {
  if (!e.target.classList.contains("btn-statut")) return;
  const { id, val } = e.target.dataset;

  try {
    await updateDoc(doc(db, "reservations", id), { statut: val });
    e.target.closest("tr").querySelector(".statut").textContent = val;
  } catch (err) {
    console.error("Erreur mise √† jour statut :", err);
  }
});

// Filtres
const searchInput  = document.getElementById("search-input");
const filterStatut = document.getElementById("filter-statut");
const filterPack   = document.getElementById("filter-pack");

function filtrer() {
  const q  = searchInput?.value.toLowerCase()  ?? "";
  const st = filterStatut?.value.toLowerCase() ?? "";
  const pk = filterPack?.value.toLowerCase()   ?? "";

  [...tableBody.children].forEach(row => {
    const visible =
      (row.dataset.nom.includes(q) || row.dataset.email.includes(q)) &&
      (st === "" || row.dataset.statut === st) &&
      (pk === "" || row.dataset.pack   === pk);

    row.style.display = visible ? "" : "none";
  });
}

searchInput?.addEventListener("input", filtrer);
filterStatut?.addEventListener("change", filtrer);
filterPack?.addEventListener("change", filtrer);
